/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–≥–æ ElevenLabs API –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
 */
import { HttpsProxyAgent } from 'https-proxy-agent';
import fetch from 'node-fetch';

const API_KEY = 'sk_9f67d8858f37a8ec4c0696ee22c6c99fd5fd085312adc7c1';
const PROXY_URL = 'http://user325386:6qea5s@195.64.117.160:7591';

async function testKey() {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ElevenLabs API –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...\n');
  console.log('üîë API –∫–ª—é—á:', API_KEY.substring(0, 20) + '...');
  console.log('üåê –ü—Ä–æ–∫—Å–∏:', PROXY_URL.replace(/:[^:@]+@/, ':****@'));
  
  const agent = new HttpsProxyAgent(PROXY_URL);
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    console.log('\nüìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...');
    
    const userResponse = await fetch('https://api.elevenlabs.io/v1/user', {
      method: 'GET',
      headers: {
        'xi-api-key': API_KEY,
      },
      // @ts-ignore
      agent,
    });
    
    if (!userResponse.ok) {
      const errorText = await userResponse.text();
      console.error(`‚ùå –û—à–∏–±–∫–∞ ${userResponse.status}:`, errorText);
      
      if (userResponse.status === 401) {
        console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('   - –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á');
        console.log('   - –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π –ø–æ–¥–ø–∏—Å–∫–∏');
        console.log('   - API –∫–ª—é—á –æ—Ç–æ–∑–≤–∞–Ω');
      }
      return;
    }
    
    const userData = await userResponse.json();
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', JSON.stringify(userData, null, 2));
    
    // –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤—É–∫–∞
    console.log('\nüìã –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤—É–∫–∞...');
    console.log('‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é "simple keyboard click sound"...');
    
    const soundResponse = await fetch('https://api.elevenlabs.io/v1/sound-generation', {
      method: 'POST',
      headers: {
        'xi-api-key': API_KEY,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        text: 'simple keyboard click sound',
        duration_seconds: 1,
        prompt_influence: 0.5,
      }),
      // @ts-ignore
      agent,
    });
    
    if (!soundResponse.ok) {
      const errorText = await soundResponse.text();
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ${soundResponse.status}:`, errorText);
      
      try {
        const errorJson = JSON.parse(errorText);
        if (errorJson.detail?.status === 'payment_issue') {
          console.log('\nüí≥ –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π –ø–æ–¥–ø–∏—Å–∫–∏');
          console.log('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: https://elevenlabs.io/app/subscription');
        }
      } catch (e) {
        // –ù–µ JSON –æ—Ç–≤–µ—Ç
      }
      return;
    }
    
    const soundBlob = await soundResponse.arrayBuffer();
    console.log(`‚úÖ –ó–≤—É–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${soundBlob.byteLength} –±–∞–π—Ç`);
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ö–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏.');
    
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
    }
  }
}

testKey().catch(console.error);

